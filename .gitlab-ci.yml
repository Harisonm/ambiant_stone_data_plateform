# File: .gitlab-ci.yml

variables:
  SERVICE_NAME: "${SERVICE_NAME}"
  GCP_PROJECT_ID: "${GCP_PROJECT_ID}"
  GCP_SERVICE_ACCOUNT: '${GCP_CREDENTIALS}'
  GCP_REGION: "${GCP_REGION}"
  REPOSITORY: "${REPOSITORY}"
  ACCOUNT: "${ACCOUNT}"

.get_dbt_variables:
    stage: .pre
    image:
      name: google/cloud-sdk:latest
      entrypoint: [""]
    script:
      - apt-get install -y jq
      - echo $GCP_SERVICE_ACCOUNT > gcloud-service-key.json # Save Google cloud contents in a temporary json file
      - gcloud auth activate-service-account --key-file gcloud-service-key.json # Activate your service account
      - gcloud config set project $GCP_PROJECT_ID #Set the GCP Project ID to the variable name
      - echo $DBT_SECRET >> service-account.json
    artifacts:
        paths:
          - service-account.json

#-----------------------------
#-- anchor
#-----------------------------

.before_deploy_dbt_container: &before_deploy_dbt_container
  - DBT_SERVICE_ACCOUNT_PROD=$(cat service-account.json)

get_dbt_variables:
  stage: .pre
  extends: .get_dbt_variables
  rules:
    - if: $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"

deploy:
  stage: deploy
  only:
    - main  # This pipeline stage will run on this branch alone
  image: google/cloud-sdk:latest # We'll use Google Cloud SDK for Cloud Run related commands
  variables:
    IMAGE_NAME: $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$REPOSITORY/$SERVICE_NAME:latest
  script:
    - echo $GCP_SERVICE_ACCOUNT > gcloud-service-key.json # Save Google cloud contents in a temporary json file
    - gcloud auth activate-service-account --key-file gcloud-service-key.json # Activate your service account
    - gcloud config set project $GCP_PROJECT_ID #Set the GCP Project ID to the variable name
    - gcloud auth configure-docker # Configure docker environment
    - gcloud builds submit --substitutions=_SERVICE_NAME="${SERVICE_NAME}",_GCP_PROJECT_ID="${GCP_PROJECT_ID}",_GCP_REGION="${GCP_REGION}",_REPOSITORY="${REPOSITORY}",_DBT_SERVICE_ACCOUNT="${DBT_SERVICE_ACCOUNT_PROD}" --region=europe-west1
  needs:
    - job: get_dbt_variables
      artifacts: true
  before_script: *before_deploy_dbt_container
